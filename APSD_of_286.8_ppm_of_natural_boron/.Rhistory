# Plot
ggplot(data = average_APSD) +
#  geom_point(aes(x = Frequency, y = APSD)) +
geom_errorbar(aes(x = Frequency, y = APSD,
ymin = APSD - sd, ymax = APSD + sd),
width = 0.03) +
scale_x_log10(labels = trans_format('log10', math_format(10^.x)),
limit = c(20,1e5)) +
scale_y_continuous() +
xlab('Frequency (Hz)') +
ylab('APSD ('~count^2/Hz~')') +
theme_bw()
setwd("/media/scape/98A8F45FA8F43D76/Users/scape/Dropbox/Doutorado/Final/Paper da tese/arquivos para a ANE/Data_in_brief/dados/15kg")
# Needed packages
library(dplyr)
library(ggplot2)
library(scales)
# Grouping the files
file_numbers <- c(1:12)
for (i in file_numbers){
file_name <- paste('spectra', i, sep = '')
col <- read.csv(file = file_name,
header = FALSE,
sep = '\t')
if (i==1) {
APSDs_data <- col %>% select(V1)
names(APSDs_data) <- 'n'
col <- col %>% select(V2)
} else {
col <- col %>% select(V2)
}
names(col) <- file_name
APSDs_data <- cbind(APSDs_data, col)
}
head(APSDs_data)
# Frequency column
Dwell_Time = 5E-6 # seconds
number_of_channels = 62500
average_APSD <- data.frame(APSDs_data[1]/(Dwell_Time * number_of_channels))
names(average_APSD) <- 'Frequency'
# Mean APSD column
average_APSD$APSD <- apply(APSDs_data[-1], 1, mean)
# Uncertainties of the mean APSD
func <- function(x){
sum(x**2)
}
sum_sqrt <- apply(APSDs_data[-1], 1, func)
number_of_averages = 3000
# APSD uncertainty column
average_APSD$sd <- sqrt(sum_sqrt)/(ncol(APSDs_data - 1) * sqrt(number_of_averages))
# Final dataset
# The first two columns have to be eliminated
average_APSD <- average_APSD[-c(1:2),]
head(average_APSD)
# Figure
scientific_10 <- function(x) {
parse(text=gsub("e", "%.%10^", scientific_format()(x)))
}
png(filename = 'average_APSD_286ppm_nat_boron.png',
width = 560, height = 360, units = "px")
ggplot(data = average_APSD) +
#  geom_point(aes(x = Frequency, y = APSD)) +
geom_errorbar(aes(x = Frequency, y = APSD,
ymin = APSD - sd, ymax = APSD + sd),
width = 0.03) +
scale_x_log10(labels = trans_format('log10', math_format(10^.x))) +
scale_y_continuous(label=scientific_10) +
xlab('Frequency ('~Hz~')') +
ylab('APSD ('~counts^2/Hz~')') +
theme_bw(base_size = 16)
dev.off()
ggplot(data = average_APSD) +
#  geom_point(aes(x = Frequency, y = APSD)) +
geom_errorbar(aes(x = Frequency, y = APSD,
ymin = APSD - sd, ymax = APSD + sd),
width = 0.03) +
scale_x_log10(labels = trans_format('log10', math_format(10^.x))) +
scale_y_continuous(label = gsub("e", "%.%10^", scientific_format()(x))) +
xlab('Frequency ('~Hz~')') +
ylab('APSD ('~counts^2/Hz~')') +
theme_bw(base_size = 16)
ggplot(data = average_APSD) +
#  geom_point(aes(x = Frequency, y = APSD)) +
geom_errorbar(aes(x = Frequency, y = APSD,
ymin = APSD - sd, ymax = APSD + sd),
width = 0.03) +
scale_x_log10(labels = trans_format('log10', math_format(10^.x))) +
scale_y_continuous(label = gsub("e", "%.%10^", scientific_format())) +
xlab('Frequency ('~Hz~')') +
ylab('APSD ('~counts^2/Hz~')') +
theme_bw(base_size = 16)
ggplot(data = average_APSD) +
#  geom_point(aes(x = Frequency, y = APSD)) +
geom_errorbar(aes(x = Frequency, y = APSD,
ymin = APSD - sd, ymax = APSD + sd),
width = 0.03) +
scale_x_log10(labels = trans_format('log10', math_format(10^.x))) +
scale_y_continuous(label = parse(text = gsub("e", "%.%10^", scientific_format()(x)))) +
xlab('Frequency ('~Hz~')') +
ylab('APSD ('~counts^2/Hz~')') +
theme_bw(base_size = 16)
scale_y_continuous(label = parse(text = gsub("e", "%.%10^", scientific_format())) +
ggplot(data = average_APSD) +
#  geom_point(aes(x = Frequency, y = APSD)) +
geom_errorbar(aes(x = Frequency, y = APSD,
ymin = APSD - sd, ymax = APSD + sd),
width = 0.03) +
scale_x_log10(labels = trans_format('log10', math_format(10^.x))) +
scale_y_continuous(label = parse(text = gsub("e", "%.%10^", scientific_format()))) +
xlab('Frequency ('~Hz~')') +
ylab('APSD ('~counts^2/Hz~')') +
theme_bw(base_size = 16)
ggplot(data = average_APSD) +
#  geom_point(aes(x = Frequency, y = APSD)) +
geom_errorbar(aes(x = Frequency, y = APSD,
ymin = APSD - sd, ymax = APSD + sd),
width = 0.03) +
scale_x_log10(labels = trans_format('log10', math_format(10^.x))) +
scale_y_continuous(label = parse(text = gsub("e", "%.%10^", scientific_format()))) +
xlab('Frequency ('~Hz~')') +
ylab('APSD ('~counts^2/Hz~')') +
theme_bw(base_size = 16)
ggplot(data = average_APSD) +
#  geom_point(aes(x = Frequency, y = APSD)) +
geom_errorbar(aes(x = Frequency, y = APSD,
ymin = APSD - sd, ymax = APSD + sd),
width = 0.03) +
scale_x_log10(labels = trans_format('log10', math_format(10^.x))) +
scale_y_continuous(label = parse(text = gsub("e", "%.%10^", scientific_format(x)))) +
xlab('Frequency ('~Hz~')') +
ylab('APSD ('~counts^2/Hz~')') +
theme_bw(base_size = 16)
ggplot(data = average_APSD) +
#  geom_point(aes(x = Frequency, y = APSD)) +
geom_errorbar(aes(x = Frequency, y = APSD,
ymin = APSD - sd, ymax = APSD + sd),
width = 0.03) +
scale_x_log10(labels = trans_format('log10', math_format(10^.x))) +
scale_y_continuous(label = parse(text = gsub("e", "%.%10^", scientific_format()))) +
xlab('Frequency ('~Hz~')') +
ylab('APSD ('~counts^2/Hz~')') +
theme_bw(base_size = 16)
ggplot(data = average_APSD) +
#  geom_point(aes(x = Frequency, y = APSD)) +
geom_errorbar(aes(x = Frequency, y = APSD,
ymin = APSD - sd, ymax = APSD + sd),
width = 0.03) +
scale_x_log10(labels = trans_format('log10', math_format(10^.x))) +
scale_y_continuous(label = function(x) {
parse(text = gsub("e", "%.%10^", scientific_format()(x)))
}) +
xlab('Frequency ('~Hz~')') +
ylab('APSD ('~counts^2/Hz~')') +
theme_bw(base_size = 16)
parse(gsub("e", "%.%10^", scientific_format()(x)))
ggplot(data = average_APSD) +
#  geom_point(aes(x = Frequency, y = APSD)) +
geom_errorbar(aes(x = Frequency, y = APSD,
ymin = APSD - sd, ymax = APSD + sd),
width = 0.03) +
scale_x_log10(labels = trans_format('log10', math_format(10^.x))) +
scale_y_continuous(label = function(x) {
parse(gsub("e", "%.%10^", scientific_format()(x)))
}) +
xlab('Frequency ('~Hz~')') +
ylab('APSD ('~counts^2/Hz~')') +
theme_bw(base_size = 16)
parse(gsub("e", "%.%10^", scientific_format()(x)))
ggplot(data = average_APSD) +
#  geom_point(aes(x = Frequency, y = APSD)) +
geom_errorbar(aes(x = Frequency, y = APSD,
ymin = APSD - sd, ymax = APSD + sd),
width = 0.03) +
scale_x_log10(labels = trans_format('log10', math_format(10^.x))) +
scale_y_continuous(label = function(x) {
parse(gsub("e", "%.%10^", scientific_format()(x)))
}) +
xlab('Frequency ('~Hz~')') +
ylab('APSD ('~counts^2/Hz~')') +
theme_bw(base_size = 16)
parse(text = gsub("e", "%.%10^", scientific_format()(x))) }) +
xlab('Frequency ('~Hz~')') +
ylab('APSD ('~counts^2/Hz~')') +
theme_bw(base_size = 16)
parse(text = gsub("e", "%.%10^", scientific_format()(x))) }) +
xlab('Frequency ('~Hz~')') +
ylab('APSD ('~counts^2/Hz~')') +
theme_bw(base_size = 16)
ggplot(data = average_APSD) +
#  geom_point(aes(x = Frequency, y = APSD)) +
geom_errorbar(aes(x = Frequency, y = APSD,
ymin = APSD - sd, ymax = APSD + sd),
width = 0.03) +
scale_x_log10(labels = trans_format('log10', math_format(10^.x))) +
scale_y_continuous(label = function(x) {
parse(text = gsub("e", "%.%10^", scientific_format()(x)))
}) +
xlab('Frequency ('~Hz~')') +
ylab('APSD ('~counts^2/Hz~')') +
theme_bw(base_size = 16)
parse(text = gsub("e", "%.%10^", scientific_format()(x))) }) +
xlab('Frequency ('~Hz~')') +
ylab('APSD ('~counts^2/Hz~')') +
theme_bw(base_size = 16)
parse(text = gsub("e", "%.%10^", scientific_format()(x))) }) +
xlab('Frequency ('~Hz~')') +
ylab('APSD ('~counts^2/Hz~')') +
theme_bw(base_size = 16)
ggplot(data = average_APSD) +
#  geom_point(aes(x = Frequency, y = APSD)) +
geom_errorbar(aes(x = Frequency, y = APSD,
ymin = APSD - sd, ymax = APSD + sd),
width = 0.03) +
scale_x_log10(labels = trans_format('log10', math_format(10^.x))) +
scale_y_continuous(label = function(x) {
parse(text = gsub("e", "%.%10^", scientific_format()(x))) }) +
xlab('Frequency ('~Hz~')') +
ylab('APSD ('~counts^2/Hz~')') +
theme_bw(base_size = 16)
# Sa
png(filename = 'average_APSD_286ppm_nat_boron.png',
width = 560, height = 360, units = "px")
ggplot(data = average_APSD) +
#  geom_point(aes(x = Frequency, y = APSD)) +
geom_errorbar(aes(x = Frequency, y = APSD,
ymin = APSD - sd, ymax = APSD + sd),
width = 0.03) +
scale_x_log10(labels = trans_format('log10', math_format(10^.x))) +
scale_y_continuous(label = function(x) {
parse(text = gsub("e", "%.%10^", scientific_format()(x))) }) +
xlab('Frequency ('~Hz~')') +
ylab('APSD ('~counts^2/Hz~')') +
theme_bw(base_size = 16)
dev.off()
# Needed packages
library(dplyr)
library(ggplot2)
library(scales)
# Grouping the files
file_numbers <- c(1:12)
for (i in file_numbers){
file_name <- paste('Raw_data/spectra', i, sep = '')
col <- read.csv(file = file_name,
header = FALSE,
sep = '\t')
if (i==1) {
APSDs_data <- col %>% select(V1)
names(APSDs_data) <- 'n'
col <- col %>% select(V2)
} else {
col <- col %>% select(V2)
}
names(col) <- file_name
APSDs_data <- cbind(APSDs_data, col)
}
head(APSDs_data)
file_name[1:]
file_name[1:10]
# Grouping the files
file_numbers <- c(1:12)
for (i in file_numbers){
file_name <- paste('Raw_data/spectra', i, sep = '')
col <- read.csv(file = file_name,
header = FALSE,
sep = '\t')
if (i==1) {
APSDs_data <- col %>% select(V1)
names(APSDs_data) <- 'n'
col <- col %>% select(V2)
} else {
col <- col %>% select(V2)
}
names(col) <- paste('spectra', i, sep = '')
APSDs_data <- cbind(APSDs_data, col)
}
head(APSDs_data)
# Needed packages
library(dplyr)
library(ggplot2)
library(scales)
# Grouping the files
file_numbers <- c(1:12)
for (i in file_numbers){
file_name <- paste('Raw_data/spectra', i, sep = '')
col <- read.csv(file = file_name,
header = FALSE,
sep = '\t')
if (i==1) {
APSDs_data <- col %>% select(V1)
names(APSDs_data) <- 'n'
col <- col %>% select(V2)
} else {
col <- col %>% select(V2)
}
names(col) <- paste('spectra', i, sep = '')
APSDs_data <- cbind(APSDs_data, col)
}
head(APSDs_data)
# Frequency column
Dwell_Time = 5E-6 # seconds
number_of_channels = 62500
average_APSD <- data.frame(APSDs_data[1]/(Dwell_Time * number_of_channels))
names(average_APSD) <- 'Frequency'
apply(APSDs_data[-1], 1, round(mean, 5))
apply(APSDs_data[-1], 1, round(mean, 5))
apply(APSDs_data[-1], 1, round(mean))
apply(APSDs_data[-1], 1, mean, round)
apply(APSDs_data[-1], 1, mean, round)
# Mean APSD column
average_APSD$APSD <- apply(APSDs_data[-1], 1, mean)
average_APSD
round(average_APSD$APSD, 5)
round(average_APSD$APSD)
round(average_APSD$APSD, 10)
round(3.567,2)
round(3.565,2)
round(3.575,2)
round(3.5651,2)
round(3.5651, 3)
round(0.35651, 3)
round(1.476666e-7, 3)
signif(1.476666e-7, 3)
signif(1.476666e-7, 6)
signif(average_APSD$APSD, 6)
# Mean APSD column
average_APSD$APSD <- signif(apply(APSDs_data[-1], 1, mean), 6)
average_APSD$APSD
# Needed packages
library(dplyr)
library(ggplot2)
library(scales)
# Grouping the files
file_numbers <- c(1:12)
for (i in file_numbers){
file_name <- paste('Raw_data/spectra', i, sep = '')
col <- read.csv(file = file_name,
header = FALSE,
sep = '\t')
if (i==1) {
APSDs_data <- col %>% select(V1)
names(APSDs_data) <- 'n'
col <- col %>% select(V2)
} else {
col <- col %>% select(V2)
}
names(col) <- paste('spectra', i, sep = '')
APSDs_data <- cbind(APSDs_data, col)
}
head(APSDs_data)
# Frequency column
Dwell_Time = 5E-6 # seconds
number_of_channels = 62500
average_APSD <- data.frame(APSDs_data[1]/(Dwell_Time * number_of_channels))
names(average_APSD) <- 'Frequency'
# Mean APSD column
average_APSD$APSD <- signif(apply(APSDs_data[-1], 1, mean), 6)
# Uncertainties of the mean APSD
func <- function(x){
sum(x**2)
}
sum_sqrt <- apply(APSDs_data[-1], 1, func)
number_of_averages = 3000
# APSD uncertainty column
average_APSD$sd <- signif(sqrt(sum_sqrt)/
(ncol(APSDs_data - 1) * sqrt(number_of_averages)), 6)
average_APSD$sd
# Final dataset
# The first two columns have to be eliminated
average_APSD <- average_APSD[-c(1:2),]
head(average_APSD)
# Salving the fianl dataset
write.csv(x = average_APSD,
file = 'average_APSD_286ppm_nat_boron.csv',
row.names = FALSE)
# Salving the fianl dataset
write.csv(x = average_APSD,
file = 'average_APSD_286ppm_nat_boron.csv',
row.names = FALSE, quote = FALSE)
# Salving the fianl dataset
write.csv(x = average_APSD,
file = 'average_APSD_286ppm_nat_boron.csv',
row.names = FALSE,
quote = FALSE)
average_APSD
aa <- read.csv(file = 'dados_15kg.txt')
aa
aa <- read.csv(file = 'dados_15kg.txt', sep = '\t')
aa
head(aa)
aa <- read.csv(file = 'dados_15kg.txt', sep = '\t', header = F)
head(aa)
head(average_APSD)
ncol(APSDs_data - 1)
ncol(APSDs_data)
ncol(APSDs_data) -1
# Needed packages
library(dplyr)
library(ggplot2)
library(scales)
# Grouping the files
file_numbers <- c(1:12)
for (i in file_numbers){
file_name <- paste('Raw_data/spectra', i, sep = '')
col <- read.csv(file = file_name,
header = FALSE,
sep = '\t')
if (i==1) {
APSDs_data <- col %>% select(V1)
names(APSDs_data) <- 'n'
col <- col %>% select(V2)
} else {
col <- col %>% select(V2)
}
names(col) <- paste('spectra', i, sep = '')
APSDs_data <- cbind(APSDs_data, col)
}
head(APSDs_data)
# Frequency column
Dwell_Time = 5E-6 # seconds
number_of_channels = 62500
average_APSD <- data.frame(APSDs_data[1]/(Dwell_Time * number_of_channels))
names(average_APSD) <- 'Frequency'
# Mean APSD column
average_APSD$APSD <- signif(apply(APSDs_data[-1], 1, mean), 6)
# Uncertainties of the mean APSD
func <- function(x){
sum(x**2)
}
sum_sqrt <- apply(APSDs_data[-1], 1, func)
number_of_averages = 3000
# APSD uncertainty column
average_APSD$sd <- signif(sqrt(sum_sqrt)/
((ncol(APSDs_data)-1) * sqrt(number_of_averages)), 6)
# Final dataset
# The first two columns have to be eliminated
average_APSD <- average_APSD[-c(1:2),]
head(average_APSD)
# Salving the fianl dataset
write.csv(x = average_APSD,
file = 'average_APSD_286ppm_nat_boron.csv',
row.names = FALSE,
quote = FALSE)
head(average_APSD)
head(aa)
# Making and saving the figure of the average APSD
png(filename = 'average_APSD_286ppm_nat_boron.png',
width = 560, height = 360, units = "px")
ggplot(data = average_APSD) +
#  geom_point(aes(x = Frequency, y = APSD)) +
geom_errorbar(aes(x = Frequency, y = APSD,
ymin = APSD - sd, ymax = APSD + sd),
width = 0.03) +
scale_x_log10(labels = trans_format('log10', math_format(10^.x))) +
scale_y_continuous(label = function(x) {
parse(text = gsub("e", "%.%10^", scientific_format()(x))) }) +
xlab('Frequency ('~Hz~')') +
ylab('APSD ('~counts^2/Hz~')') +
theme_bw(base_size = 16)
dev.off()
head(average_APSD)
head(aa)
labels(average_APSD)
labels(average_APSD)[[2]]
head(aa)
names(aa) <- labels(average_APSD)[[2]]
head(aa)
head(average_APSD)
#labels(average_APSD)[[2]]
#aa <- read.csv(file = 'dados_15kg.txt', sep = '\t', header = F)
#names(aa) <- labels(average_APSD)[[2]]
head(aa)
dim(average_APSD)
dim(aa)
sum(average_APSD == aa)
sum(average_APSD == aa)/3
sum(average_APSD != aa)/3
sum(average_APSD != aa)
sum(average_APSD$Frequency != aa$Frequency)
sum(average_APSD$APSD != aa$APSD)
sum(average_APSD$sd != aa$s)
average_APSD[verage_APSD$APSD != aa$APSD,]
average_APSD$APSD[average_APSD$APSD != aa$APSD,]
average_APSD$APSD[average_APSD$APSD != aa$APSD]
bb <- data.frame(ave = average_APSD$APSD[average_APSD$APSD != aa$APSD],
aa = aa$$APSD[average_APSD$APSD != aa$APSD])
bb <- data.frame(ave = average_APSD$APSD[average_APSD$APSD != aa$APSD],
aa = aa$APSD[average_APSD$APSD != aa$APSD])
bb
average_APSD$APSD - aa$APSD
bb$diff <- bb$ave - bb$aa
head(bb)
bb$diff <- bb$aa - bb$ave
head(bb)
sum(bb$diff > 1e-7)
sum(bb$diff > 1e-8)
sum(bb$diff > 1e-9)
sum(bb$diff > 1e-10)
sum(bb$diff > 1e-11)
sum(bb$diff > 1e-12)
sum(bb$diff > 1e-13)
sum(bb$diff > 1e-14)
sum(average_APSD$sd != aa$sd)
bb <- data.frame(ave = average_APSD$sd[average_APSD$sd != aa$sd],
aa = aa$sd[average_APSD$sd != aa$sd])
head(bb)
bb$diff <- bb$aa - bb$ave
head(bb)
sum(bb$diff > 1e-14)
sum(bb$diff > 1e-20)
sum(bb$diff > 1e-30)
sum(bb$diff > 1e-40)
sum(bb$diff > 1e-560)
